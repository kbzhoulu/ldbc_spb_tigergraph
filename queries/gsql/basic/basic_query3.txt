CREATE QUERY basic_query3_optimized() FOR GRAPH ldbc_test { 
  /* Write query logic here */ 
  /*
  query name: basic_query3.txt
  query description: 
  Retrieve a list of creative works that are instances of classes BlogPost or NewsItem,
  that are about a specific topic, the value of primaryFormat is one of TextualFormat,
  InteractiveFormat or PictureGalleryFormat. If the creative work has an audience
  then the creative work should be obtained using this value. Given the retrieved list of
  creative works, return for each resource its related nodes, and then order the result in
  descending order of the value of their creationDate property.
  
  example: 
  topicURI: http://dbpedia.org/resource/Margherita_Granbassi  
  */
  
  SetAccum<STRING> @audience;
  MaxAccum<STRING> @dateCreated;
  MaxAccum<STRING> @dateModified;
  SetAccum<STRING> @altText;
  SetAccum<STRING> @description;
  MaxAccum<STRING> @liveCoverage;
  MaxAccum<STRING> @shortTitle;
  MaxAccum<STRING> @title;
  SetAccum<STRING> @primaryContentOf;
  SetAccum<STRING> @category;
  SetAccum<STRING> @mentions;
  SetAccum<STRING> @primaryFormat;
  SetAccum<STRING> @thumbnail;
  SetAccum<STRING> @about;
  SetAccum<STRING> @tag;
  
  # find the instances of classes BlogPost or NewsItem
  cwtypes = SELECT s
            FROM ClassInstance:s
            WHERE s.uri == "http://www.bbc.co.uk/ontologies/creativework/BlogPost" OR 
                  s.uri == "http://www.bbc.co.uk/ontologies/creativework/NewsItem";
  
  instances = SELECT s
          FROM cwtypes:t1 - (<hasObjectInstance:e) - ObjectPropertyInstance:t - (<hasObjectPropertyInstance:e1) - ClassInstance:s
          WHERE t.uri == "http://www.w3.org/1999/02/22-rdf-syntax-ns#type";
  
  # find the returned instances that are about a specific topic
  topic = SELECT s
          FROM ClassInstance:s
          WHERE s.uri == "http://dbpedia.org/resource/Margherita_Granbassi";
  
  topics = SELECT s
           FROM topic:t1 - (<hasObjectInstance:e) - ObjectPropertyInstance:t - (<hasObjectPropertyInstance:e1) - instances:s 
           WHERE t.uri == "http://www.bbc.co.uk/ontologies/creativework/tag"; 
  
  # find the value of primaryFormat is one of TexturalFormat, InteractiveFormat, or PictureGalleryFormat
  format = SELECT s
           FROM ClassInstance:s
           WHERE s.uri == "http://www.bbc.co.uk/ontologies/creativework/TextualFormat" OR 
                 s.uri == "http://www.bbc.co.uk/ontologies/creativework/InteractiveFormat" OR
                 s.uri == "http://www.bbc.co.uk/ontologies/creativework/PictureGalleryFormat";
  
  formats = SELECT s
            FROM format:t1 - (<hasObjectInstance:e) - ObjectPropertyInstance:t - (<hasObjectPropertyInstance:e1) -  topics:s
            WHERE t.uri == "http://www.bbc.co.uk/ontologies/creativework/primaryFormat";
  
  # find the audience type should be InternationalAudience
  audience = SELECT s
             FROM ClassInstance:s
             WHERE s.uri == "http://www.bbc.co.uk/ontologies/creativework/InternationalAudience";
  
  audiences = SELECT s
              FROM audience:t1 - (<hasObjectInstance:e) - ObjectPropertyInstance:t - (<hasObjectPropertyInstance:e1) -  formats:s
              WHERE t.uri == "http://www.bbc.co.uk/ontologies/creativework/audience";
  
  # retrieve all related nodes and order om descending of the creationDate
  results = SELECT s
            FROM audiences:s - ((hasObjectPropertyInstance>|hasDatatypePropertyInstance>):e) - (ObjectPropertyInstance|DatatypePropertyInstance):t - 
                  ((hasObjectInstance>|hasValueInstance>):e1) - (ClassInstance|ValueInstance):t1
            ACCUM CASE t.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/dateCreated" THEN s.@dateCreated += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/creativework/altText" THEN s.@altText += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/creativework/dateModified" THEN s.@dateModified += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/creativework/description" THEN s.@description += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/creativework/liveCoverage" THEN s.@liveCoverage += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/creativework/shortTitle" THEN s.@shortTitle += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/creativework/title" THEN s.@title += t1.value
            WHEN "http://www.bbc.co.uk/ontologies/bbc/primaryContentOf" THEN s.@primaryContentOf += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/category" THEN s.@category += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/mentions" THEN s.@mentions += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/primaryFormat" THEN s.@primaryFormat += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/thumbnail" THEN s.@thumbnail += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/about" THEN s.@about += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/tag" THEN s.@tag += t1.uri
            WHEN "http://www.bbc.co.uk/ontologies/creativework/audience" THEN s.@audience += t1.uri
            END
            ORDER BY s.@dateCreated DESC;
  
  PRINT results;
}